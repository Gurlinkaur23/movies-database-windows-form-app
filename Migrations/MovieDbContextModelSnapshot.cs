// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesDatabaseWindowsFormApp.Context;

#nullable disable

namespace MoviesDatabaseWindowsFormApp.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    partial class MovieDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MoviesDatabaseWindowsFormApp.Entities.Movie", b =>
                {
                    b.Property<int>("MovieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieID"));

                    b.Property<bool>("Action")
                        .HasColumnType("bit");

                    b.Property<bool>("Adventure")
                        .HasColumnType("bit");

                    b.Property<bool>("Animation")
                        .HasColumnType("bit");

                    b.Property<bool>("Childrens")
                        .HasColumnType("bit");

                    b.Property<bool>("Comedy")
                        .HasColumnType("bit");

                    b.Property<bool>("Crime")
                        .HasColumnType("bit");

                    b.Property<bool>("Documentary")
                        .HasColumnType("bit");

                    b.Property<bool>("Drama")
                        .HasColumnType("bit");

                    b.Property<bool>("Fantasy")
                        .HasColumnType("bit");

                    b.Property<bool>("FilmNoir")
                        .HasColumnType("bit");

                    b.Property<bool>("Horror")
                        .HasColumnType("bit");

                    b.Property<string>("IMDbLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Musical")
                        .HasColumnType("bit");

                    b.Property<bool>("Mystery")
                        .HasColumnType("bit");

                    b.Property<bool>("Other")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Romance")
                        .HasColumnType("bit");

                    b.Property<bool>("ScienceFiction")
                        .HasColumnType("bit");

                    b.Property<bool>("Thriller")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("War")
                        .HasColumnType("bit");

                    b.Property<bool>("Western")
                        .HasColumnType("bit");

                    b.HasKey("MovieID");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MoviesDatabaseWindowsFormApp.Entities.Rating", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("MovieID")
                        .HasColumnType("int");

                    b.Property<float>("RatingValue")
                        .HasColumnType("real");

                    b.Property<int>("Timestamp")
                        .HasColumnType("int");

                    b.HasKey("UserID", "MovieID");

                    b.HasIndex("MovieID");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("MoviesDatabaseWindowsFormApp.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MoviesDatabaseWindowsFormApp.Entities.Rating", b =>
                {
                    b.HasOne("MoviesDatabaseWindowsFormApp.Entities.Movie", "Movie")
                        .WithMany("Ratings")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesDatabaseWindowsFormApp.Entities.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoviesDatabaseWindowsFormApp.Entities.Movie", b =>
                {
                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("MoviesDatabaseWindowsFormApp.Entities.User", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
